---
version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Docker Hub...
      - echo Checking Docker credentials...
      - echo $DOCKER_USERNAME
      - echo $DOCKER_PASSWORD
      - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
      - echo Logging in to Amazon ECR Public...
      - aws ecr-public get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin public.ecr.aws
      - echo Installing dependencies for frontend and backend...
      - npm install --prefix frontend
      - npm install --prefix backend

  build:
    commands:
      - echo Running Prettier for frontend...
      - npx prettier --write "frontend/src/**/*.{ts,tsx}"
      - echo Running linting tests for the frontend...
      - npm run lint --prefix frontend
      - echo Running backend tests...
      - npm test --prefix backend
      - echo Building Docker images...
      - |
        docker build --build-arg VITE_API_BASE_URL=$VITE_API_BASE_URL \
        -t public.ecr.aws/$PUBLIC_FRONTEND_REPO ./frontend
      - docker build -t public.ecr.aws/$PUBLIC_BACKEND_REPO ./backend

  post_build:
    commands:
      - echo Pushing Docker images to ECR Public...
      - docker push public.ecr.aws/$PUBLIC_FRONTEND_REPO
      - docker push public.ecr.aws/$PUBLIC_BACKEND_REPO
      - |
        echo Creating imagedefinitions.json file...
        printf '[{"name":"FE-container","imageUri":"public.ecr.aws/%s"},{"name":"backend-container","imageUri":"public.ecr.aws/%s"}]' \
        $PUBLIC_FRONTEND_REPO $PUBLIC_BACKEND_REPO > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
